import os
import logging
import asyncio
import nest_asyncio
from aiohttp import web

from telegram import (
    Update,
    ReplyKeyboardRemove,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    ConversationHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters,
)
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
credentials = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
client = gspread.authorize(credentials)
sheet = client.open("One More Bot").sheet1

# –°–æ—Å—Ç–æ—è–Ω–∏—è
(
    CHOOSE_ROLE,
    GET_NAME,
    GET_CONTACT,
    GET_POSITION,
    GET_DETAILS
) = range(5)

# –ö–Ω–æ–ø–∫–∏
def base_keyboard():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üåê –ù–∞ —Å–∞–π—Ç", url="https://onemorepro.com")]
    ])


    await update.message.reply_photo("https://onemorepro.com/images/11-1.jpg")  # –ü–æ—è–≤–∏–ª–æ—Å—å –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏ ‚Äî —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data.clear()
    keyboard = [
        [InlineKeyboardButton("–ö–ª–∏–µ–Ω—Ç", callback_data="client")],
        [InlineKeyboardButton("–°–æ–∏—Å–∫–∞—Ç–µ–ª—å", callback_data="applicant")],
        [InlineKeyboardButton("–î—Ä—É–≥–æ–µ", callback_data="other")]
    ]
    welcome_text = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ One More Production!\n\n"
        "–ú—ã —Å–æ–∑–¥–∞—ë–º —Ä–µ–∫–ª–∞–º—É, –∫–ª–∏–ø—ã, –¥–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –∫–∏–Ω–æ –∏ digital-–∫–æ–Ω—Ç–µ–Ω—Ç.\n"
        "–° –Ω–∞–º–∏ –ø—Ä–æ—Å—Ç–æ –∏ —Ç–æ—á–Ω–æ –∑–∞—Ö–æ—á–µ—Ç—Å—è one more.\n\n"
        "üëá –í—ã–±–µ—Ä–∏—Ç–µ, –∫—Ç–æ –≤—ã:"
    )
    if update.message:
        await update.message.reply_text(welcome_text, reply_markup=InlineKeyboardMarkup(keyboard))
    elif update.callback_query:
        await update.callback_query.message.reply_text(welcome_text, reply_markup=InlineKeyboardMarkup(keyboard))
    return CHOOSE_ROLE

async def choose_role(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    query = update.callback_query
    await query.answer()
    raw_role = query.data
    role_map = {"client": "–∫–ª–∏–µ–Ω—Ç", "applicant": "—Å–æ–∏—Å–∫–∞—Ç–µ–ª—å", "other": "–¥—Ä—É–≥–æ–µ"}
    role = role_map.get(raw_role, raw_role)
    context.user_data["role"] = raw_role
    context.user_data["row"] = [role, "", "", "", ""]

    await query.message.reply_photo("https://onemorepro.com/images/12.jpg")
    await query.edit_message_text("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç –∏–ª–∏ –∫–∞–∫—É—é –∫–æ–º–ø–∞–Ω–∏—é –≤—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ?", reply_markup=base_keyboard())
    return GET_NAME
